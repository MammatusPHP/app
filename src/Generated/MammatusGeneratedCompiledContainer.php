<?php
/**
 * This class has been auto-generated by PHP-DI.
 */
class MammatusGeneratedCompiledContainer extends DI\CompiledContainer{
    const METHOD_MAPPING = array (
  'PHPDIDefinitions\\Dummy' => 'get1',
  'Mammatus\\Boot\\FallBackToEchoWhenEventLoopCompletesItsLoop' => 'get2',
  'Psr\\Log\\LoggerInterface' => 'get3',
  'Monolog\\Logger' => 'get4',
  'subEntry1' => 'get5',
  'subEntry2' => 'get6',
  'subEntry3' => 'get7',
  'subEntry4' => 'get8',
  'Psr\\EventDispatcher\\EventDispatcherInterface' => 'get9',
  'config.logger.handlers' => 'get10',
  'config.mammatus.random' => 'get11',
);

    protected function get1()
    {
        return $this->resolveFactory(static function () {
        return new \PHPDIDefinitions\Dummy();
    }, 'PHPDIDefinitions\\Dummy');
    }

    protected function get2()
    {
        return $this->resolveFactory(static fn (\Monolog\Logger $logger): \Mammatus\Boot\FallBackToEchoWhenEventLoopCompletesItsLoop => new \Mammatus\Boot\FallBackToEchoWhenEventLoopCompletesItsLoop($logger), 'Mammatus\\Boot\\FallBackToEchoWhenEventLoopCompletesItsLoop');
    }

    protected function get3()
    {
        return $this->resolveFactory(static fn (\Mammatus\Boot\FallBackToEchoWhenEventLoopCompletesItsLoop $logger): \Psr\Log\LoggerInterface => $logger, 'Psr\\Log\\LoggerInterface');
    }

    protected function get5()
    {
                $value = $_ENV['APP_VERSION'] ?? $_SERVER['APP_VERSION'] ?? getenv('APP_VERSION');
        if (false !== $value) return $value;
        if (!true) {
            throw new \DI\Definition\Exception\InvalidDefinition("The environment variable 'APP_VERSION' has not been defined");
        }
        return 'dev-1760876770';
    }

    protected function get6()
    {
                $value = $_ENV['K8S_POD_NAME'] ?? $_SERVER['K8S_POD_NAME'] ?? getenv('K8S_POD_NAME');
        if (false !== $value) return $value;
        if (!true) {
            throw new \DI\Definition\Exception\InvalidDefinition("The environment variable 'K8S_POD_NAME' has not been defined");
        }
        return NULL;
    }

    protected function get7()
    {
                $value = $_ENV['K8S_NAMESPACE'] ?? $_SERVER['K8S_NAMESPACE'] ?? getenv('K8S_NAMESPACE');
        if (false !== $value) return $value;
        if (!true) {
            throw new \DI\Definition\Exception\InvalidDefinition("The environment variable 'K8S_NAMESPACE' has not been defined");
        }
        return NULL;
    }

    protected function get8()
    {
        return $this->delegateContainer->get('config.logger.handlers');
    }

    protected function get4()
    {
        return $this->resolveFactory(static function (
        string $version,
        array $handlers,
        string|null $k8sPodName,
        string|null $k8sNamespace,
    ): \Monolog\Logger {
        $logger = \WyriHaximus\Monolog\Factory::create('', \WyriHaximus\React\PSR3\Stdio\StdioLogger::create()->withHideLevel(\WyriHaximus\Constants\Boolean\TRUE_), [
            'version' => $version,
            'k8s_pod_name' => $k8sPodName,
            'k8s_namespace' => $k8sNamespace,
        ]);

        foreach ($handlers as $handler) {
            if (! ($handler instanceof \Monolog\Handler\HandlerInterface)) {
                continue;
            }

            $logger->pushHandler($handler);
        }

        return $logger;
    }, 'Monolog\\Logger', [
            'version' => $this->get5(),
            'k8sPodName' => $this->get6(),
            'k8sNamespace' => $this->get7(),
            'handlers' => $this->get8(),
        ]);
    }

    protected function get9()
    {
        return $this->resolveFactory(static fn (\Psr\Log\LoggerInterface $logger, \WyriHaximus\Broadcast\ContainerListenerProvider $listenerProvider): \WyriHaximus\Broadcast\Dispatcher => new \WyriHaximus\Broadcast\Dispatcher(
        $listenerProvider,
        new \WyriHaximus\PSR3\ContextLogger\ContextLogger(
            $logger,
            ['component' => 'event-dispatcher'],
            'event-dispatcher',
        ),
    ), 'Psr\\EventDispatcher\\EventDispatcherInterface');
    }

    protected function get10()
    {
        return [
        ];
    }

    protected function get11()
    {
        return '16daa3f5a260887039d9ee07e5';
    }

}
